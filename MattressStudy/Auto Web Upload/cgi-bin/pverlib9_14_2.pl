# ---------------------------------------------------------------------------
#     PVERLIB.PL
#
#      Ver: 9_14_2
# ---------------------------------------------------------------------------
# Lighthouse Studio - Web Surveying System
# Copyright Sawtooth Software, Inc. 1998-2022. All rights reserved.
# Provo, UT  USA  (801) 477-4700
#
# Any modification of this script will be considered violation of
# copyright (with the exception of the first line which can be
# modified to reflect the correct path to the Perl interpreter)
#
# Any use of this script or its code for purposes outside of
# the systems created by Sawtooth Software is prohibited.
# ---------------------------------------------------------------------------
 use strict; package pverlib9_14_2; sub _aqq { my ($__eta, $__etb) = @_; $authlib9_14_2::_ajr = 1; my ($__etc, $__etd, $__ete, $__etf) = (0) x 4; my $__eow = ""; my ($__esv,$__etg,$__eth,$__eqb,$__eti) = (0) x 5; my $__eox = ""; my $__eoy = 0; my $__eoz = 0; my $__epa = 0; my $__epb = 0; my $__epc = 0; my $__epd = 0; my $__epe = 0; my $__epf = 0; my $__epg = 1; if (exists $authlib9_14_2::_akn{"hid_test_mode"}) { my $__eph = _aqr(); if ($__eph) { $__epg = 0; } } if ($__epg) { $__epb = $authlib9_14_2::_ako->[$__eta - 1]; $__epc = $__epb->{'_ld'}; $__eoz = @{$__epc}; if (exists($__epb->{'_la'})) { if (!exists($ciwlib9_14_2::_tx{'remove_rand'})) { my $__epi = 0; ($__eoy, $__epi) = ciwlib9_14_2::_sp($__epb, 0, $__etb, $__eoz, $__eta); } } for($__etc = 0; $__etc < $__eoz; $__etc++) { if ($__eoy) { $__esv = $__eoy->[$__etc]; } else { $__esv = $__etc; } $__epd = $__epc->[$__esv]; $__eow = $__epd->{'_if'}; $__eth = $__epd->{'_pj'}; $authlib9_14_2::_ajk = $__eow; if ($__eth == &authlib9_14_2::_ANL || $__eth == &authlib9_14_2::_ANM) { my $__epj = authlib9_14_2::_za($__eow, 1); if (exists $__epj->{'_ls'}) { if (exists $__epj->{'_ls'}) { my $__epk = 0; my $__epl = 0; my $__epm = 0; ($__eow, $__epk, $__epl, $__epm) = acalib9_14_2::_arl($__epj, $__eow, $__eth, 0); } } } if (!exists($authlib9_14_2::_akn{"hid_q_" . $__eow}) && ($__eta != 1)) { next; } $__etg = $__epd->{'_iz'}; seek $authlib9_14_2::_ajm, $__etg, 0; $__epe = authlib9_14_2::_zi(1); if ($__eth != &authlib9_14_2::_ANJ && $__eth != &authlib9_14_2::_ANK && $__eth != &authlib9_14_2::_ANX) { $__etd++; if ($__eth == &authlib9_14_2::_ANF) { my $__epn = $__epe; if (exists $__epn->{'_s'}) { my $__epo = @{$__epn->{'_s'}->{'_v'}}; _aqx($__eow,$__epn->{'_ek'},$__etd); if ($ciwlib9_14_2::_tz) { last; } $__eqb = $authlib9_14_2::_akn{$__eow}; $__eti = _arf($__eqb); if ($__eti) { ciwlib9_14_2::_rp($__eow,$__epn->{'_ek'},'_ip',$__etd,1,$__epo,0); last; } if ($__eqb < 1 || $__eqb > $__epo) { ciwlib9_14_2::_rp($__eow,$__epn->{'_ek'},'_iu',$__etd,1,$__epo,0); last; } } elsif (exists $__epn->{'_nu'}) { if ($__epn->{'_nu'}->{'_pj'} eq "numeric") { _aqx($__eow,$__epn->{'_ek'},$__etd); if ($ciwlib9_14_2::_tz) { last; } $__eqb = authlib9_14_2::_zo($authlib9_14_2::_akn{$__eow}); $__eti = authlib9_14_2::_acp($__eqb, 0); if ($__eti) { ciwlib9_14_2::_rp($__eow,$__epn->{'_ek'},'_ip',$__etd,$__epn->{'_hx'},$__epn->{'_ho'},0); last; } my $__epp = $__epn->{'_nu'}->{'_hx'}; my $__epq = $__epn->{'_nu'}->{'_ho'}; if (($__eqb < $__epp) || ($__eqb > $__epq)) { ciwlib9_14_2::_rp($__eow,$__epn->{'_ek'},'_iu',$__etd,$__epp,$__epq,0); last; } } } } elsif ($__eth == &authlib9_14_2::_ANG) { my $__epr = $__epe; my $__eps = ""; my $__ept = authlib9_14_2::_acy($__epr->{'_hj'}); if ($__epr->{'_pj'} eq "radio") { if (exists($__epr->{'_ml'})) { _aqx($__eow,$__epr->{'_ek'},$__etd); if ($ciwlib9_14_2::_tz) { last; } } if (exists($authlib9_14_2::_akn{$__eow}) && defined($authlib9_14_2::_akn{$__eow})) { $__eqb = authlib9_14_2::_zo($authlib9_14_2::_akn{$__eow}); $__eps = $__eow . "_" . $__eqb . "_other"; $__epf = _aqt($__epr, $__eps, $__etd); if (!$__epf) { last; } } if ($authlib9_14_2::_akn{$__eow}) { if (!_arg($authlib9_14_2::_akn{$__eow}, $__ept)) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__eow . "'.", ""); } } } elsif ($__epr->{'_pj'} eq "check") { _aqy($__epr, $__eow,$__etd); if ($ciwlib9_14_2::_tz) { last; } } else { $__eqb = $authlib9_14_2::_akn{$__eow}; if ((exists($__epr->{'_ml'})) && ($__eqb eq "")) { ciwlib9_14_2::_rp($__eow,$__epr->{'_ek'},'_ia',$__etd,0,0,0); last; } if ($__eqb) { if (!_arg($__eqb, $__ept)) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__eow . "'.", ""); } } } } elsif ($__eth == &authlib9_14_2::_ANH) { my $__epu = $__epe; if (exists($__epu->{'_ml'})) { _aqx($__eow,$__epu->{'_ek'},$__etd); if ($ciwlib9_14_2::_tz) { last; } } $__eqb = authlib9_14_2::_zo($authlib9_14_2::_akn{$__eow}); if ($__eqb ne "") { $__eti = authlib9_14_2::_acp($__eqb, (exists $__epu->{'_dq'})); if ($__eti) { ciwlib9_14_2::_rp($__eow,$__epu->{'_ek'},'_ip',$__etd,$__epu->{'_hx'},$__epu->{'_ho'},0); last; } my $__epv = ""; if (exists $__epu->{'_ie'}) { $__epv = $__epu->{'_ie'}; } $__eqb =~ s/,/\./; $__epu->{'_hx'} =~ s/,/\./; $__epu->{'_ho'} =~ s/,/\./; $__epv =~ s/,/\./; authlib9_14_2::_adt($__epu); if (($__eqb < $__epu->{'_hx'} || $__eqb > $__epu->{'_ho'})) { if ($__epv ne "" && $__eqb == $__epv) { } else { ciwlib9_14_2::_rp($__eow,$__epu->{'_ek'},'_iu',$__etd,$__epu->{'_hx'},$__epu->{'_ho'},0); last; } } } } elsif ($__eth == &authlib9_14_2::_ANI) { my $__epw = $__epe; if (exists($authlib9_14_2::_akn{$__eow}) && defined($authlib9_14_2::_akn{$__eow})) { $__eqb = authlib9_14_2::_zo($authlib9_14_2::_akn{$__eow}); } if ($__epw->{'_hx'} > 0) { _aqx($__eow,$__epw->{'_ek'},$__etd); if ($ciwlib9_14_2::_tz) { last; } if (length($__eqb) < $__epw->{'_hx'}) { ciwlib9_14_2::_rp($__eow,$__epw->{'_ek'},'_ci',$__etd,$__epw->{'_hx'}, $__epw->{'_ho'},0); last; } } my $__epx = $__eqb; $__epx =~ s/ < /</g; $__epx =~ s/ > />/g; if (length($__epx) > $__epw->{'_ho'}) { ciwlib9_14_2::_rp($__eow,$__epw->{'_ek'},'_ch',$__etd,$__epw->{'_hx'}, $__epw->{'_ho'},0); last; } } elsif ($__eth == &authlib9_14_2::_ANL) { my $__epy = 0; my $__epz = $__epe; my $__eqa = ""; if (exists $__epz->{'_ek'}) { $__eqa = $__epz->{'_ek'}; } $__eox = "hid_" . $__eow . "_levels"; my $__epo = @{$__epz->{'_s'}->{'_v'}}; if (exists $authlib9_14_2::_akn{$__eox}) { $__epy = $authlib9_14_2::_akn{$__eox}; for ($__ete = 0; $__ete < $__epy; $__ete++) { $__eox = $__eow . "_" . ($__ete+1); _aqx($__eox, $__eqa, $__etd); if ($ciwlib9_14_2::_tz) { last; } my $__eqb = $authlib9_14_2::_akn{$__eox}; if ($__eqb < 1 || $__eqb > $__epo) { ciwlib9_14_2::_rp($__eow,$__eqa,'_iu',$__etd,1,$__epo,0); last; } } if ($ciwlib9_14_2::_tz) { last; } } } elsif ($__eth == &authlib9_14_2::_ANM) { my $__eqc = $__epe; my $__eqa = ""; if (exists $__eqc->{'_ek'}) { $__eqa = $__eqc->{'_ek'}; } my $__epo = @{$__eqc->{'_s'}->{'_v'}}; _aqx($__eow,$__eqa,$__etd); if ($ciwlib9_14_2::_tz) { last; } my $__eqb = $authlib9_14_2::_akn{$__eow}; if ($__eqb < 1 || $__eqb > $__epo) { ciwlib9_14_2::_rp($__eow,$__eqa,'_iu',$__etd,1,$__epo,0); last; } } elsif ($__eth == &authlib9_14_2::_ANN) { my $__eqd = $__epe; my $__eqa = ""; if (exists $__eqd->{'_ek'}) { $__eqa = $__eqd->{'_ek'}; } my $__epo = @{$__eqd->{'_s'}->{'_v'}}; _aqx($__eow,$__eqa,$__etd); if ($ciwlib9_14_2::_tz) { last; } my $__eqb = $authlib9_14_2::_akn{$__eow}; if ($__eqb < 1 || $__eqb > $__epo) { ciwlib9_14_2::_rp($__eow,$__eqa,'_iu',$__etd,1,$__epo,0); last; } } elsif ($__eth == &authlib9_14_2::_ANO) { my $__eqe = $__epe; my $__eqa = ""; if (exists $__eqe->{'_ek'}) { $__eqa = $__eqe->{'_ek'}; } my $__eqf = $__eqe->{'_gx'}; my $__eqg = $__eqe->{'_ir'}; my $__eqh = ""; my $__eqi = ""; if ($__eow =~ m/(.*?_Calibration)/i) { $__eqi = $1; } if ($__eqf == 1) { $__eqg = 1; } for ($__ete = 1; $__ete <= $__eqg; $__ete++) { if ($__eqf == 1) { $__eqh = $__eow; } else { $__eqh = $__eqi . $__ete; } if (exists $authlib9_14_2::_akn{$__eqh}) { _aqx($__eqh, $__eqa, $__etd); if ($ciwlib9_14_2::_tz) { last; } else { $__eqb = $authlib9_14_2::_akn{$__eqh}; $__eti = _arf($__eqb); if ($__eti) { ciwlib9_14_2::_rp($__eqh,$__eqa,'_ip',$__etd,$__eqe->{'_hx'},$__eqe->{'_ho'},0); last; } elsif (($__eqb < $__eqe->{'_hx'} || $__eqb > $__eqe->{'_ho'})) { ciwlib9_14_2::_rp($__eqh,$__eqa,'_iu',$__etd,$__eqe->{'_hx'},$__eqe->{'_ho'},0); last; } } } } if ($ciwlib9_14_2::_tz) { last; } } elsif (($__eth == &authlib9_14_2::_ANP) || ($__eth == &authlib9_14_2::_ANQ)) { my $__eqj = $__epe; my $__eqk = 0; my $__eql = ""; my $__eqg = $__eqj->{'_cv'}; if (exists $__eqj->{'_ph'}) { $__eqg++; } if (exists $authlib9_14_2::_akn{"hid_Custom_CBC_" . $__eow}) { $__etd--; if (exists $authlib9_14_2::_akn{"hid_Custom_CBC_" . $__eow . "_No_Verification"}) { next; } $__eow = $authlib9_14_2::_akn{"hid_Custom_CBC_" . $__eow}; $__eqk = 1; } if (exists $__eqj->{'_ek'}) { $__eql = $__eqj->{'_ek'}; } if (exists $__eqj->{'_df'}) { if ($__eqk) { $__eth = &authlib9_14_2::_ANR; } my $__eqm = $__eqj->{'_df'}; my $__eqn = 0; $__eqn = authlib9_14_2::_adw($__eqg); $__eqm->{'_uh'} = $__eqn; $__eqm->{'_ml'} = 1; my ($__etj, $__etk) = _aqu($__eqm,$__eow,$__eth,$__etd); if ($__etj == 1) { ciwlib9_14_2::_rp($__eow,$__eql,'_de',$__etd,0,$__etk,$__eqm); return 0; } elsif ($__etj == 2) { ciwlib9_14_2::_rp($__eow,$__eql,'_ia',$__etd,0,0,0); return 0; } elsif ($__etj == 3) { ciwlib9_14_2::_rp($__eow,$__eql,'_ip',$__etd,0,$__eqm->{'_dg'},0); return 0; } elsif ($__etj == 4) { ciwlib9_14_2::_rp($__eow,$__eql,'_iu',$__etd,0,$__eqm->{'_dg'},0); return 0; } } elsif (exists $__eqj->{'_aw'}) { my $__eqo = "_b"; my $__eqp = "_w"; if ($__eqk) { $__eqo = "best"; $__eqp = "worst"; } _aqx($__eow . $__eqo, $__eql, $__etd); if ($ciwlib9_14_2::_tz) { last; } _aqx($__eow . $__eqp, $__eql, $__etd); if ($ciwlib9_14_2::_tz) { last; } _aqw($__eow, $__eqo, $__eqp, $__eql, $__etd); if ($ciwlib9_14_2::_tz) { last; } my $__eqq = $authlib9_14_2::_akn{$__eow . $__eqo}; my $__eqr = $authlib9_14_2::_akn{$__eow . $__eqp}; if (1 > $__eqq || $__eqq > $__eqg) { ciwlib9_14_2::_rp($__eow,$__eql,'_iu',$__etd,1,$__eqg,0); last; } if (1 > $__eqr || $__eqr > $__eqg) { ciwlib9_14_2::_rp($__eow,$__eql,'_iu',$__etd,1,$__eqg,0); } } else { _aqx($__eow,$__eql,$__etd); if ($ciwlib9_14_2::_tz) { last; } my $__eqb = $authlib9_14_2::_akn{$__eow}; if (1 > $__eqb || $__eqb > $__eqg) { ciwlib9_14_2::_rp($__eow,$__eql,'_iu',$__etd,1,$__eqg,0); } } if ($ciwlib9_14_2::blnGlobalVerifyErrorFlag eq "" && exists $__eqj->{'_eh'}) { my $__eqs = ""; my $__eqt = ""; if (exists $__eqj->{'_eh'}->{'_ek'}) { $__eqt = $__eqj->{'_eh'}->{'_ek'}; } if ($__eqk) { if ($__eow =~ m/(.*?)_(.*?)/) { $__eqs = $1; } } else { $__eqs = $__eow; } $__eqs .= "_none"; _aqx($__eqs,$__eqt,$__etd); if ($ciwlib9_14_2::_tz) { last; } my $__eqb = $authlib9_14_2::_akn{$__eqs}; if ($__eqb != 1 && $__eqb != 2) { ciwlib9_14_2::_rp($__eow,$__eqt,'_iu',$__etd,1,2,0); } } if ($ciwlib9_14_2::_tz) { last; } } elsif ($__eth == &authlib9_14_2::_ANR || $__eth == &authlib9_14_2::_ANS) { my ($__etl) = 0; my ($__ete) = 0; my ($__etm) = ""; my ($__etn) = ""; my ($__eto) = ""; my $__equ = 0; my %__eqv = (); my %__eqw = (); my $__eqx = 0; my $__eqy = 0; my $__eqz = 0; my $__era = 0; my $__erb = ""; my $__erc = 0; my $__erd = 0; my $__ere = ""; my $__erf = ""; my $__erg = 0; if ($__eth == &authlib9_14_2::_ANS) { my @__erh = (); my @__eri = (); $__eox = "hid_row_list_" . $__eow; if ((exists $authlib9_14_2::_akn{$__eox}) && (defined $authlib9_14_2::_akn{$__eox})) { @__erh = split(",", $authlib9_14_2::_akn{$__eox}); $__eox = "hid_col_list_" . $__eow; if ((exists $authlib9_14_2::_akn{$__eox}) && (defined $authlib9_14_2::_akn{$__eox})) { $__erg = 1; @__eri = split(",", $authlib9_14_2::_akn{$__eox}); $__etl = authlib9_14_2::_ack($__epe, 0, \@__erh, \@__eri); my $__erj = @__erh; for ($__ete = 0; $__ete < $__erj; $__ete++) { $__ere = $__eow . "_r" . $__erh[$__ete] . "_other"; if ((exists $authlib9_14_2::_akn{$__ere}) && (defined $authlib9_14_2::_akn{$__ere})) { if ((exists $authlib9_14_2::_akn{"hid_" . $__ere}) && (defined $authlib9_14_2::_akn{"hid_" . $__ere})) { $__eqz = 1; $__eqv{$__erh[$__ete]} = $__ere; } } } my $__erk = @__eri; for ($__ete = 0; $__ete < $__erk; $__ete++) { $__ere = $__eow . "_c" . $__eri[$__ete] . "_other"; if ((exists $authlib9_14_2::_akn{$__ere}) && (defined $authlib9_14_2::_akn{$__ere})) { if ((exists $authlib9_14_2::_akn{"hid_" . $__ere}) && (defined $authlib9_14_2::_akn{"hid_" . $__ere})) { $__eqz = 1; $__eqw{$__eri[$__ete]} = $__ere; } } } } } } else { $__etl = $__epe->{'_pv'}; $__erg = 1; } if ($__erg) { my $__erl = @{$__etl}; for($__ete = 0; $__ete < $__erl; $__ete++) { $__equ = $__etl->[$__ete]; $__eto = $__equ->{'_if'}; $__etn = $__equ->{'_ek'}; $__etm = ref($__equ); if ($__etm eq "ComboVar") { if (exists $authlib9_14_2::_akn{$__eto}) { if (exists($__equ->{'_ml'})) { _aqx($__eto,$__etn,$__etd); if ($ciwlib9_14_2::_tz) { return 0; } $__eqb = $authlib9_14_2::_akn{$__eto}; if ($__eqb eq "") { ciwlib9_14_2::_rp($__eto,$__etn,'_ia',$__etd,0,0,0); return 0; } } if ($__eth == &authlib9_14_2::_ANS && $authlib9_14_2::_akn{$__eto}) { my $__ept = authlib9_14_2::_acy($__equ->{'_hj'}); if (!_arg($authlib9_14_2::_akn{$__eto}, $__ept)) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__eto . "'.", ""); } } } } elsif ($__etm eq "OpenEndVar") { if (exists $authlib9_14_2::_akn{$__eto}) { $__eqb = authlib9_14_2::_zo($authlib9_14_2::_akn{$__eto}); if ($__equ->{'_hx'} > 0) { _aqx($__eto,$__etn,$__etd); if ($ciwlib9_14_2::_tz) { return 0; } if (length($__eqb) < $__equ->{'_hx'}) { ciwlib9_14_2::_rp($__eto,$__etn,'_ci',$__etd,$__equ->{'_hx'},$__equ->{'_ho'},0); return 0; } } if (length($__eqb) > $__equ->{'_ho'}) { ciwlib9_14_2::_rp($__eto,$__etn,'_ch',$__etd,$__equ->{'_hx'},$__equ->{'_ho'},0); return 0; } } } elsif ($__etm eq "NumericVar") { if (exists $authlib9_14_2::_akn{$__eto}) { $__eqb = authlib9_14_2::_zo($authlib9_14_2::_akn{$__eto}); if ($__eqb eq "") { if (exists($__equ->{'_ml'})) { _aqx($__eto,$__etn,$__etd); if ($ciwlib9_14_2::_tz) { return 0; } } } else { $__eti = authlib9_14_2::_acp($__eqb, (exists $__equ->{'_dq'})); if ($__eti) { ciwlib9_14_2::_rp($__eto,$__etn,'_ip',$__etd,$__equ->{'_hx'},$__equ->{'_ho'},0); return 0; } my $__epv = ""; if (exists $__equ->{'_ie'}) { $__epv = $__equ->{'_ie'}; } $__eqb =~ s/,/\./; $__equ->{'_hx'} =~ s/,/\./; $__equ->{'_ho'} =~ s/,/\./; $__epv =~ s/,/\./; authlib9_14_2::_adt($__equ); $__eqb =~ s/,/\./; if (($__eqb < $__equ->{'_hx'}) || ($__eqb > $__equ->{'_ho'})) { if ($__epv ne "" && $__eqb == $__epv) { } else { ciwlib9_14_2::_rp($__eto,$__etn,'_iu',$__etd,$__equ->{'_hx'},$__equ->{'_ho'},0); return 0; } } } } } elsif ($__etm eq "CheckVar") { my $__erm = 0; my $__ern = 0; my @__ero = (); if ($__eth == &authlib9_14_2::_ANS) { @__ero = @{$__equ->{'_uh'}}; } else { my $__erp = $__equ->{'_iy'}; for ($__erm = 1; $__erm <= $__erp; $__erm++) { push @__ero, $__erm; } } my $__erq = @__ero; my $__err = ""; my @__ers = (); my $__ert = 0; my $__eru = 0; my $__erv = 0; my $__erw = $__erq; if (exists($__equ->{'_hx'}) && exists($__equ->{'_ho'})) { $__erv = $__equ->{'_hx'}; $__erw = $__equ->{'_ho'}; if ($__erq < $__erw) { $__erw = $__erq; } if ($__erq < $__erv) { $__erv = $__erq; } } $__eox = "hid_noneabove_" . $__eow; if ((exists $authlib9_14_2::_akn{$__eox}) && (defined $authlib9_14_2::_akn{$__eox})) { $__err = $authlib9_14_2::_akn{$__eox}; @__ers = split(",", $__err); } foreach $__erm (@__ero) { if ($__eth == &authlib9_14_2::_ANS) { $__eox = $__eto; $__eox =~ s/\*/$__erm/; } else { $__eox = $__eto . "_" . $__erm; } if ((exists $authlib9_14_2::_akn{$__eox}) && (defined $authlib9_14_2::_akn{$__eox})) { if ($authlib9_14_2::_akn{$__eox} eq "1" || $authlib9_14_2::_akn{$__eox} == "1") { if (@__ers) { for ($__ert = 0; $__ert < @__ers; $__ert++) { if ($__erm == $__ers[$__ert]) { $__eru = 1; if ($__erv > 1) { $__erv = 1; } last; } } } $__ern++; } } if ($__eth == &authlib9_14_2::_ANS) { my $__eqb = $authlib9_14_2::_akn{$__eox}; if ($__eqb) { if ($__eqb !~ m/^[0-1]$/o) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__eox . "'.", ""); } } } } my $__erx = 1; $__eox = "hid_" . $__eto . "_count"; if (exists $authlib9_14_2::_akn{$__eox}) { my $__ery = $authlib9_14_2::_akn{$__eox}; if ($__ery == 0) { $__erx = 0; } elsif ($__ery < $__erv) { $__erv = $__ery; } } if ($__erx) { if ($__eru && ($__ern > 1)) { ciwlib9_14_2::_rp($__eto,$__etn,'_in',$__etd,$__erv,$__erw,0); return 0; } elsif ($__ern < $__erv) { ciwlib9_14_2::_rp($__eto,$__etn,'_cg',$__etd,$__erv,$__erw,0); return 0; } elsif ($__ern > $__erw) { ciwlib9_14_2::_rp($__eto,$__etn,'_cf',$__etd,$__erv,$__erw,0); return 0; } } if ($__eth == &authlib9_14_2::_ANS) { foreach $__erm (@__ero) { $__eox = $__eto; $__eox =~ s/\*/$__erm/; my $__eqb = $authlib9_14_2::_akn{$__eox}; if ($__eqb) { if ($__eqb !~ m/^[0-1]$/o) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__eox . "'.", ""); } } } } } elsif ($__etm eq "RadioVar") { if (!exists $authlib9_14_2::_akn{"hid_" . $__eto . "_missing"}) { if (exists($__equ->{'_ml'})) { _aqx($__eto,$__etn,$__etd); if ($ciwlib9_14_2::_tz) { return 0; } } } if ($__eth == &authlib9_14_2::_ANS) { my $__erz = 0; if ($__epe->{'_pu'} eq "rows") { my $__esa = "hid_col_list_" . $__eow; my @__eri = map { {'_pt' => $_ } } split(",", $authlib9_14_2::_akn{$__esa}); $__erz = \@__eri; } else { my $__esa = "hid_row_list_" . $__eow; my @__erh = map { {'_pt' => $_ } } split(",", $authlib9_14_2::_akn{$__esa}); $__erz = \@__erh; } my $__eqb = $authlib9_14_2::_akn{$__eto}; if ($__eqb) { if (!_arg($__eqb, $__erz)) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__eto . "'.", ""); } } } } elsif ($__etm eq "ConsumVar") { my ($__etj, $__etk) = _aqu($__equ, $__eto, $__eth, $__etd); if ($__etj == 1) { ciwlib9_14_2::_rp($__eto,$__etn,'_de',$__etd,0,$__etk,$__equ); return 0; } elsif ($__etj == 2) { ciwlib9_14_2::_rp($__eto,$__etn,'_ia',$__etd,0,0,0); return 0; } elsif ($__etj == 3) { ciwlib9_14_2::_rp($__eto,$__etn,'_ip',$__etd,0,$__equ->{'_dg'},0); return 0; } elsif ($__etj == 4) { ciwlib9_14_2::_rp($__eto,$__etn,'_iu',$__etd,0,$__equ->{'_dg'},0); return 0; } } elsif ($__etm eq "RankVar") { authlib9_14_2::_adt($__equ); my $__esb = _aqs($__eto, $__equ, 1, $__etd); if ($__esb == 1) { ciwlib9_14_2::_rp($__eto,$__etn,'_lv',$__etd,0,0,0); return 0; } elsif ($__esb == 2) { ciwlib9_14_2::_rp($__eto,$__etn,'_ia',$__etd,0,0,0); return 0; } elsif ($__esb == 3) { ciwlib9_14_2::_rp($__eto,$__etn,'_ip',$__etd,1,$__equ->{'_ho'},0); return 0; } elsif ($__esb == 4) { ciwlib9_14_2::_rp($__eto,$__etn,'_iu',$__etd,1,$__equ->{'_ho'},0); return 0; } elsif ($__esb == 5) { ciwlib9_14_2::_rp($__eto,$__etn,'_lt',$__etd,$__equ->{'_hx'},$__equ->{'_ho'},0); return 0; } } if ($__eqz) { my $__erm = 0; my $__esc = 0; my $__esd = 1; my @__ese = (); my $__esf = ""; my $__esg = 1; for ($__esc = 0; $__esc < 2; $__esc++) { if (($__etm eq "CheckVar") || ($__etm eq "RankVar") || ($__etm eq "ConsumVar")) { @__ese = @{$__equ->{'_uh'}}; $__esd = @__ese; } else { $__esd = 1; } for($__erm = 0; $__erm < $__esd; $__erm++) { $__esf = $__eto; if (($__etm eq "RankVar") || ($__etm eq "ConsumVar")) { $__esf = $__equ->{'_uz'}; $__esf =~ s/\*/$__ese[$__erm]/; } elsif ($__etm eq "CheckVar") { $__esf = $__eto; $__esf =~ s/\*/$__ese[$__erm]/; } $__era = 0; $__ere = ""; $__eqx = 0; $__eqy = 0; if ($__esf =~ m/_r(\d+)/) { $__eqx = $1; } if ($__esf =~ m/_c(\d+)/) { $__eqy = $1; } if (exists($authlib9_14_2::_akn{$__esf}) && defined($authlib9_14_2::_akn{$__esf})) { $__eqb = authlib9_14_2::_zo($authlib9_14_2::_akn{$__esf}); if ($__esg) { if (exists($__eqv{$__eqx})) { if ($__eqb ne "" && $__eqb ne "0") { $__era = 1; $__ere = $__eqv{$__eqx}; } } else { if (($__eqx == 0) && ($__eqy > 0)) { if (exists($__eqv{$__eqb})) { $__era = 1; $__ere = $__eqv{$__eqb}; } } } } else { if (exists($__eqw{$__eqy})) { if ($__eqb ne "" && $__eqb ne "0") { $__era = 1; $__ere = $__eqw{$__eqy}; } } else { if (($__eqy == 0) && ($__eqx > 0)) { if (exists($__eqw{$__eqb})) { $__era = 1; $__ere = $__eqw{$__eqb}; } } } } $__epf = _aqt($__equ, $__ere, $__etd); if (!$__epf) { return 0; } } } $__esg = 0; } } } } } elsif ($__eth == &authlib9_14_2::_ANT) { my $__esh = $__epe; my ($__etj, $__etk) = _aqu($__esh, $__eow, $__eth, $__etd); if ($__etj == 1) { ciwlib9_14_2::_rp($__eow,$__esh->{'_ek'},'_de',$__etd,0,$__etk,$__esh); return 0; } elsif ($__etj == 2) { ciwlib9_14_2::_rp($__eow,$__esh->{'_ek'},'_ia',$__etd,0,0,0); return 0; } elsif ($__etj == 3) { ciwlib9_14_2::_rp($__eow,$__esh->{'_ek'},'_ip',$__etd,0,$__esh->{'_dg'},0); return 0; } elsif ($__etj == 4) { ciwlib9_14_2::_rp($__eow,$__esh->{'_ek'},'_iu',$__etd,0,$__esh->{'_dg'},0); return 0; } elsif ($__etj == 5) { return 0; } } elsif ($__eth == &authlib9_14_2::_ANU) { my $__esi = $__epe; authlib9_14_2::_adt($__esi); my $__esb = _aqs($__eow, $__esi, 0, $__etd); if ($__esb == 1) { ciwlib9_14_2::_rp($__eow,$__esi->{'_ek'},'_lv',$__etd,0,0,0); return 0; } elsif ($__esb == 2) { ciwlib9_14_2::_rp($__eow,$__esi->{'_ek'},'_ia',$__etd,0,0,0); return 0; } elsif ($__esb == 3) { ciwlib9_14_2::_rp($__eow,$__esi->{'_ek'},'_ip',$__etd,1,$__esi->{'_ho'},0); return 0; } elsif ($__esb == 4) { ciwlib9_14_2::_rp($__eow,$__esi->{'_ek'},'_iu',$__etd,1,$__esi->{'_ho'},0); return 0; } elsif ($__esb == 5) { ciwlib9_14_2::_rp($__eow,$__esi->{'_ek'},'_lt',$__etd,$__esi->{'_hx'},$__esi->{'_ho'},0); return 0; } elsif ($__esb == 6) { return 0; } } elsif ($__eth == &authlib9_14_2::_ANW) { my $__esj = $__epe; if (exists $authlib9_14_2::_akn{"hid_Custom_MaxDiff_" . $__eow}) { $__etd--; if (exists $authlib9_14_2::_akn{"hid_Custom_MaxDiff_" . $__eow . "_No_Verification"}) { next; } $__eow = $authlib9_14_2::_akn{"hid_Custom_MaxDiff_" . $__eow}; } _aqx($__eow . "_b",$__esj->{'_ek'},$__etd); if ($ciwlib9_14_2::_tz) { last; } if (!(exists $__esj->{'_au'})) { _aqx($__eow . "_w",$__esj->{'_ek'},$__etd); if ($ciwlib9_14_2::_tz) { last; } _aqv($__eow,$__esj->{'_ek'},$__etd); if ($ciwlib9_14_2::_tz) { last; } } if (exists $__esj->{'_eg'}) { _aqx($__eow . "_anchor", $__esj->{'_ek'}, $__etd); if ($ciwlib9_14_2::_tz) { last; } } my $__esk = authlib9_14_2::_acy($__esj->{'_hj'}); if (!_arg($authlib9_14_2::_akn{$__eow . "_b"}, $__esk)) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__eow . "_b" . "'.", ""); } if (!(exists $__esj->{'_au'})) { if (!_arg($authlib9_14_2::_akn{$__eow . "_w"}, $__esk)) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__eow . "_w" . "'.", ""); } } } elsif ($__eth == &authlib9_14_2::_ANY) { my $__esl = $__epe; _aqz($__esl, $__eow, $__etd); if ($ciwlib9_14_2::_tz) { last; } } elsif ($__eth == &authlib9_14_2::_ANZ) { my $__esm = $__epe; _ara($__esm, $__eow, $__etd); if ($ciwlib9_14_2::_tz) { last; } } elsif ($__eth == &authlib9_14_2::_AOA) { my $__esn = $__epe; _arb($__esn, $__eow, $__etd); if ($ciwlib9_14_2::_tz) { last; } } elsif ($__eth == &authlib9_14_2::_AOB) { my $__eso = $__epe; _arc($__eso, $__eow, $__etd); if ($ciwlib9_14_2::_tz) { last; } } elsif ($__eth == &authlib9_14_2::_AOC) { my $__esp = $__epe; _ard($__esp, $__eow, $__etd); if ($ciwlib9_14_2::_tz) { last; } } elsif ($__eth == &authlib9_14_2::_AOD) { my $__esq = $__epe; _are($__esq, $__eow, $__etd); if ($ciwlib9_14_2::_tz) { last; } } elsif ($__eth == &authlib9_14_2::_AOE) { my $__esr = $__epe; my $__ess = "hid_list_" . $__eow; my @__est = (); if (exists($authlib9_14_2::_akn{$__ess})) { my $__esu = $authlib9_14_2::_akn{$__ess}; @__est = split(",", $__esu); } if (exists $__esr->{'_ml'}) { my $__esv = 0; foreach $__esv (@__est) { _aqx($__eow . "_" . $__esv, $__esr->{'_ek'}, $__etd); if ($ciwlib9_14_2::_tz) { last; } } if ($ciwlib9_14_2::_tz) { last; } } my $__esw = 0; if (exists $__esr->{'_hb'} && exists $__esr->{'_mt'}) { my $__esx = $__esr->{'_hb'}; my $__esy = $__esr->{'_mt'}; my @__esz = (); if ($__esx <= $__esy) { @__esz = map { { '_pt' => $_ } } ($__esx)..($__esy); } else { @__esz = map { { '_pt' => $_ } } ($__esy)..($__esx); } $__esw = \@__esz; } else { $__esw = authlib9_14_2::_acy($__esr->{'_u'}); } foreach my $__esv (@__est) { my $__eox = $__eow . "_" . $__esv; my $__eqb = $authlib9_14_2::_akn{$__eox}; if ($__eqb) { if (!_arg($__eqb, $__esw)) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__eox . "'.", ""); } } } if ($ciwlib9_14_2::_tz) { last; } } } } } $authlib9_14_2::_ajk = ""; $authlib9_14_2::_ajr = 0; } sub _aqr { my $__etp = ""; my $__etq = 0; my $__etr = 1; foreach $__etp (keys %authlib9_14_2::_akn) { if ($__etp !~ m/^hid_/i) { $__etq = $authlib9_14_2::_akn{$__etp}; if ($__etq) { $__etr = 0; last; } } } return $__etr; } sub _aqs { my ($__eum, $__eun, $__euo, $__eup) = @_; my $__ets = 0; my $__ett = ""; my $__etu = ""; my $__etv = ""; my $__etw = 0; my $__etx = 0; if ($__euo) { $__etv = $__eun->{'_uz'}; $__etw = $__eun->{'_uh'}; } else { $__etv = $__eum . "_*"; my $__ety = "hid_list_" . $__eum; if (exists($authlib9_14_2::_akn{$__ety}) && (defined $authlib9_14_2::_akn{$__ety})) { my $__etz = $authlib9_14_2::_akn{$__ety}; my @__eua = split(",", $__etz); $__etw = \@__eua; } } my $__eub = @{$__etw}; my $__euc = $__eun->{'_pj'}; my $__eud = 0; my $__eue = 0; if (exists $__eun->{'_ho'}) { $__eue = $__eun->{'_ho'}; if ($__eue > $__eub) { $__eue = $__eub; } } else { $__eue = $__eub; $__eud = $__eub; } if (exists $__eun->{'_hx'}) { $__eud = $__eun->{'_hx'}; if ($__eud > $__eub) { $__eud = $__eub; } } elsif (($__euc eq "dragAndDrop" || $__euc eq "containers") && exists $__eun->{'_ho'}) { $__eud = $__eue; } if ($__eud > 0 && exists($__eun->{'_ml'})) { $__etx = 1; } my $__euf = 0; my @__eug = (0) x $__eue; my $__euh = 0; my $__eui = 0; if ($__euc eq "combo") { my $__euj = authlib9_14_2::_acy($__eun->{'_hj'}); if ($__euj) { my $__euk = @{$__euj}; if ($__euk < $__eue) { $__eue = $__euk; } if ($__euk < $__eud) { $__eud = $__euk; } } } $__eun->{'_ho'} = $__eue; $__eun->{'_hx'} = $__eud; for ($__ets = 0; $__ets < $__eub; $__ets++) { $__ett = $__etv; $__ett =~ s/\*/$__etw->[$__ets]/; $__euh = authlib9_14_2::_zo($authlib9_14_2::_akn{$__ett}); if ($__euc eq "numeric") { if ($__euh ne "") { if (_arf($__euh)) { return 3; } elsif (($__euh < 1) || ($__euh > $__eue)) { return 4; } } } if ($__euh ne "" && $__euh ne "0") { $__euf++; if ($__eug[$__euh - 1] == 0) { $__eug[$__euh - 1] = 1; } else { $__eug[$__euh - 1]++; } if ($__eug[$__euh - 1] > 1) { return 1; } if (!$__euo) { $__eui = _aqt($__eun, $__ett . "_other", $__eup); if (!$__eui) { return 6; } } } } if ($__euf == 0 && !$__etx) { return 0; } if ($__euf < $__eud || $__euf > $__eue) { return 5; } my $__eul = 0; for ($__ets = 0; $__ets < @__eug; $__ets++) { if ($__eug[$__ets] == 0) { $__eul = 1; } else { if ($__eul) { return 5; } } } return 0; } sub _aqt { my ($__euv, $__euw, $__eux) = @_; if (exists($authlib9_14_2::_akn{$__euw}) && defined($authlib9_14_2::_akn{$__euw})) { my $__euq = "hid_" . $__euw; my $__eur = 0; my $__eus = 0; my $__eut = ""; if (exists($authlib9_14_2::_akn{$__euq}) && defined($authlib9_14_2::_akn{$__euq})) { $__euq = $authlib9_14_2::_akn{$__euq}; if ($__euq =~ m/^(\d+)\,(\d+)\,(.*?)$/) { $__eur = $1; $__eus = $2; $__eut = $3; } my $__euu = authlib9_14_2::_zo($authlib9_14_2::_akn{$__euw}); if ($__eur > 0) { _aqx($__euw,$__eut,$__eux); if ($ciwlib9_14_2::_tz) { return 0; } if (length($__euu) < $__eur) { ciwlib9_14_2::_rp($__euw,$__eut,'_ci',$__eux,$__eur,$__eus, 0); return 0; } } if (length($__euu) > $__eus) { ciwlib9_14_2::_rp($__euw,$__eut,'_ch',$__eux,$__eur, $__eus,0); return 0; } } } return 1; } sub _aqu { my ($__evs, $__evt, $__evu, $__evv) = @_; my $__euy = ""; my $__euz = 0; if ($__evu == &authlib9_14_2::_ANS) { $__euy = $__evs->{'_uz'}; } elsif ($__evu == &authlib9_14_2::_ANR) { $__euy = $__evt . "*"; } else { $__euy = $__evt . "_*"; } my $__eva = $__evs->{'_dg'}; $__eva =~ s/,/\./; my $__evb = $__eva; $__evb =~ s/\.//; if ($__evb !~ m/^\s*\d+\s*$/) { $__eva = 0; $__evs->{'_dg'} = 0; } my $__evc = $__eva - $__evs->{'_hx'}; my $__evd = $__eva + $__evs->{'_ho'}; my $__eve = 0; if (exists($__evs->{'_ml'})) { $__eve = 1; } my $__evf = 0; if (exists($__evs->{'_pw'})) { $__evf = 1; } my $__evg = 0; if ($__evu == &authlib9_14_2::_ANT) { my $__evh = "hid_list_" . $__evt; if (exists($authlib9_14_2::_akn{$__evh}) && (defined $authlib9_14_2::_akn{$__evh})) { my $__evi = $authlib9_14_2::_akn{$__evh}; my @__evj = split(",", $__evi); $__evg = \@__evj; } } else { $__evg = $__evs->{'_uh'}; } my $__evk = @{$__evg}; my $__evl = 0; my $__evm = 0; my $__evn = ""; my $__evo = 1; my $__evp = 0; my $__evq = 0; my $__evr = ""; if (!$__eve) { for($__evl = 0; $__evl < $__evk; $__evl++) { $__evn = $__euy; $__evn =~ s/\*/$__evg->[$__evl]/; if (exists($authlib9_14_2::_akn{$__evn})) { if (authlib9_14_2::_zo($authlib9_14_2::_akn{$__evn}) ne "") { $__evo = 0; } } } if ($__evo) { return (0, 0); } } for($__evl = 0; $__evl < $__evk; $__evl++) { $__evn = $__euy; $__evn =~ s/\*/$__evg->[$__evl]/; if (!(exists($authlib9_14_2::_akn{$__evn}))) { next; } $__evm = authlib9_14_2::_zo($authlib9_14_2::_akn{$__evn}); if ($__evm eq "") { if ($__evf) { return (2, $__evq); } } else { if (authlib9_14_2::_acp($__evm, (exists $__evs->{'_dq'}))) { return (3, $__evq); } if (($__evm < 0) || ($__evm > $__eva)) { return (4, $__evq); } } if (exists $authlib9_14_2::_akp->{'_dq'}) { $__evm =~ s/,/\./; } if ($__evu == &authlib9_14_2::_ANT) { if ($__evm ne "" && $__evm ne "0") { $__euz = _aqt($__evs, $__evn . "_other", $__evv); if (!$__euz) { return (5, $__evq); } } } $__evq = $__evq + $__evm; } if (($__evc > $__evq) || ($__evd < $__evq)) { $__evp = 1; } if (exists $authlib9_14_2::_akp->{'_dq'}) { $__evq =~ s/\./,/; } if ($__evp) { return (1, $__evq); } else { return (0, $__evq); } } sub _aqv { my ($__ewa,$__ewb,$__ewc) = @_; my ($__ewd) = (0) x 1; my $__evw = 0; my $__evx = ""; my $__evy = 0; $__evx = $__ewa . "_b"; if ((exists $authlib9_14_2::_akn{$__evx}) || (defined $authlib9_14_2::_akn{$__evx})) { $__evy = $authlib9_14_2::_akn{$__evx}; } my $__evz = 0; $__evx = $__ewa . "_w"; if ((exists $authlib9_14_2::_akn{$__evx}) || (defined $authlib9_14_2::_akn{$__evx})) { $__evz = $authlib9_14_2::_akn{$__evx}; } if ($__evy == $__evz) { ciwlib9_14_2::_rp($__ewa,$__ewb,'_hu',$__ewc,0,0,0); } } sub _aqw { my ($__ewj, $__ewk, $__ewl, $__ewm,$__ewn) = @_; my $__ewe = ""; my $__ewf = 0; my $__ewg = ""; my $__ewh = 0; $__ewg = $__ewj . $__ewk; if ((exists $authlib9_14_2::_akn{$__ewg}) || (defined $authlib9_14_2::_akn{$__ewg})) { $__ewh = $authlib9_14_2::_akn{$__ewg}; } my $__ewi = 0; $__ewg = $__ewj . $__ewl; if ((exists $authlib9_14_2::_akn{$__ewg}) || (defined $authlib9_14_2::_akn{$__ewg})) { $__ewi = $authlib9_14_2::_akn{$__ewg}; } if ($__ewh == $__ewi) { ciwlib9_14_2::_rp($__ewj,$__ewm,'_bv',$__ewn,0,0,0); } } sub _aqx { my ($__ewp,$__ewq,$__ewr) = @_; my ($__ews) = (0) x 1; my $__ewo = 0; if (!(exists $authlib9_14_2::_akn{$__ewp}) || !(defined $authlib9_14_2::_akn{$__ewp})) { $__ewo = 1; } else { $__ews = $authlib9_14_2::_akn{$__ewp}; if (length($__ews) <= 0) { $__ewo = 1; } } if ($__ewo) { ciwlib9_14_2::_rp($__ewp,$__ewq,'_ia',$__ewr,0,0,0); } } sub _aqy { my ($__exm, $__exn, $__exo) = @_; my $__ewt = ""; my $__ewu = 0; my $__ewv = 0; my $__eww = ""; my $__ewx = 0; my $__ewy = $__exm->{'_ek'}; my $__ewz = 0; if (!exists($__exm->{'_hx'}) && !exists($__exm->{'_ho'})) { return 1; } my $__exa = $__exm->{'_hx'}; my $__exb = $__exm->{'_ho'}; my $__exc = 0; my $__exd = 0; my $__exe = ""; my @__exf = (); my $__exg = 0; my $__exh = ""; my $__exi = ""; my @__exj = (); my $__exk = 0; my $__exl = 0; $__eww = "hid_list_" . $__exn; if (exists($authlib9_14_2::_akn{$__eww}) && (defined $authlib9_14_2::_akn{$__eww})) { $__exe = $authlib9_14_2::_akn{$__eww}; @__exf = split(",", $__exe); $__exg = @__exf; if ($__exg < $__exb) { $__exb = $__exg; } if ($__exg < $__exa) { $__exa = $__exg; } $__eww = "hid_noneabove_" . $__exn; if ((exists $authlib9_14_2::_akn{$__eww}) && (defined $authlib9_14_2::_akn{$__eww})) { $__exi = $authlib9_14_2::_akn{$__eww}; @__exj = split(",", $__exi); } for($__ewu=0; $__ewu < $__exg; $__ewu++) { $__eww = $__exn . "_" . $__exf[$__ewu]; if ((exists $authlib9_14_2::_akn{$__eww}) && (defined $authlib9_14_2::_akn{$__eww})) { $__ewt = $authlib9_14_2::_akn{$__eww}; if ($__ewt eq "1") { if (@__exj) { for ($__ewv = 0; $__ewv < @__exj; $__ewv++) { if ($__exf[$__ewu] == $__exj[$__ewv]) { $__exk = 1; if ($__exa > 1) { $__exa = 1; } last; } } } $__ewx++; $__exh = $__eww . "_other"; $__ewz = _aqt($__exm, $__exh, $__exo); if (!$__ewz) { $__exl = 1; last; } } elsif ($__ewt ne "0" && $__ewt ne "") { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__eww . "'.", ""); } } } } if (!$__exl) { if (($__exk == 1) && ($__ewx > 1)) { ciwlib9_14_2::_rp($__exn,$__ewy,'_in', $__exo,$__exa,$__exb,0); } elsif ($__ewx < $__exa) { ciwlib9_14_2::_rp($__exn,$__ewy,'_cg',$__exo,$__exa,$__exb,0); } elsif ($__ewx > $__exb) { ciwlib9_14_2::_rp($__exn,$__ewy,'_cf',$__exo,$__exa,$__exb,0); } } } sub _aqz { my ($__ezd, $__eze, $__ezf) = @_; my $__exp = ""; my $__exq = 0; my $__exr = 0; my $__exs = ""; my $__ext = 0; my $__exu = ""; my $__exv = 0; my $__exw = 0; my $__exx = ""; if (exists $__ezd->{'_ek'}) { $__exu = $__ezd->{'_ek'}; } my $__exy = ""; my @__exz = (); my $__eya = 0; $__exs = "hid_list_" . $__eze; if (exists $authlib9_14_2::_akn{$__exs}) { $__exy = $authlib9_14_2::_akn{$__exs}; @__exz = split(",", $__exy); $__eya = @__exz; my $__eyb = authlib9_14_2::_aao($__eze); my $__eyc = $__eyb->{'_ad'}; my $__eyd = authlib9_14_2::_acy($__eyb->{'_ac'}); my $__eye = 0; my $__eyf = 0; my %__eyg = (); my @__eyh = (); if ($__eyd) { for ($__exq = 0; $__exq < @{$__eyd}; $__exq++) { $__eyf = $__eyd->[$__exq]->{'_pt'}; $__eyg{$__eyf} = $__exq; if (exists $__eyc->{$__eyf}) { if (exists $__eyc->{$__eyf}->{'_me'}) { push @__eyh, $__eyf; } } } } my %__eyi = (); my @__eyj = (); for($__exq = 0; $__exq < $__eya; $__exq++) { $__exs = $__eze . "_" . $__exz[$__exq]; if (exists $__eyc->{$__exz[$__exq]} && $__eyc->{$__exz[$__exq]}->{'_kp'}) { push (@__eyj, $__exq); } else { _aqx($__exs,$__ezd->{'_ek'},$__ezf); if ($ciwlib9_14_2::_tz) { $__exv = 1; last; } if (exists $__eyc->{$__exz[$__exq]}) { my $__eyk = authlib9_14_2::_acy($__eyc->{$__exz[$__exq]}->{'_he'}); if (!_arg($authlib9_14_2::_akn{$__exs}, $__eyk)) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__exs . "'.", ""); } } $__eyi{$__exz[$__exq]} = 1; } } if (!$__exv) { my $__eyl = 0; while (@__eyj > 0) { $__exq = $__eyj[$__eyl]; $__exs = $__eze . "_" . $__exz[$__exq]; if (not exists $__eyc->{$__exz[$__exq]}->{'_kp'}) { splice(@__eyj, $__eyl, 1); if ($__eyl == @__eyj) { $__eyl = 0; } next; } my @__eym = @{$__eyc->{$__exz[$__exq]}->{'_kp'}}; my $__eyn = 1; my $__eyo = 1; my $__eyp = 1; for (my $__exr = 0; $__exr < @__eym; $__exr++) { if (exists $__eyg{$__eym[$__exr]}) { if (exists $__eyc->{$__eym[$__exr]}->{'_me'}) { next; } $__eyp = 0; if (not exists $__eyi{$__eym[$__exr]}) { $__eyo = 0; } } } for (my $__exr = 0; $__exr < @__eym && $__eyo; $__exr++) { if (exists $__eyg{$__eym[$__exr]}) { my $__exp = $authlib9_14_2::_akn{$__eze . "_" . $__eym[$__exr]}; if (exists $__eyc->{$__eym[$__exr]}->{'_db'}->{$__exz[$__exq]}->{$__exp}) { $__eyn = 0; last; } } } if ($__eyo) { $__eyi{$__exz[$__exq]} = 1; splice(@__eyj, $__eyl, 1); if ($__eyl == @__eyj) { $__eyl = 0; } if ($__eyn || $__eyp) { my $__exp = $authlib9_14_2::_akn{$__exs}; if ($__exp ne "") { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__exs . "'.", ""); } } else { _aqx($__exs, $__ezd->{'_ek'}, $__ezf); if ($ciwlib9_14_2::_tz) { $__exv = 1; last; } my $__eyk = authlib9_14_2::_acy($__eyc->{$__exz[$__exq]}->{'_he'}); if (!_arg($authlib9_14_2::_akn{$__exs}, $__eyk)) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__exs . "'.", ""); } } } else { $__eyl++; if ($__eyl == @__eyj) { $__eyl = 0; } } } } if ($__exv == 0) { if (exists $__eyb->{'_ks'}) { my $__eyq = $__eyb->{'_ks'}; if (@__eyh) { $__eyq = authlib9_14_2::_aap(\@__eyh, $__eyq); } my $__eyr = @{$__eyq}; my $__eys = 0; my $__eyt = 0; my $__exq = 0; my $__exr = 0; my $__eyf = 0; my $__eyu = 0; my $__eyv = 0; for ($__exq = 0; $__exq < $__eyr; $__exq++) { $__eys = $__eyq->[$__exq]; $__eyt = @{$__eys}; $__exw = 1; for ($__exr = 0; $__exr < $__eyt; $__exr++) { $__eyf = $__eys->[$__exr]->[0]; $__eyu = $__eys->[$__exr]->[1]; $__exs = $__eze . "_" . $__eyf; if (exists $authlib9_14_2::_akn{$__exs}) { $__eyv = $authlib9_14_2::_akn{$__exs}; if ($__eyv != $__eyu) { $__exw = 0; last; } } else { $__exw = 0; last; } } if ($__exw) { my $__eyw = 0; my $__eyx = ""; my $__eyy = 0; my $__eyz = ""; my $__eza = 0; my $__ezb = ""; my %__ezc = (); for ($__exr = 0; $__exr < $__eyt; $__exr++) { $__eyf = $__eys->[$__exr]->[0]; $__eyu = $__eys->[$__exr]->[1]; $__ezc{$__eyf} = $__eyu; } $authlib9_14_2::_akn{"sys_acbc_proh_atts"} = \%__ezc; last; } } } } } if ($__exw) { ciwlib9_14_2::_rp($__eze,$__exu,'_f',$__ezf,0,$__exx,$__ezd); } } sub _ara { my ($__ezq, $__ezr, $__ezs) = @_; my $__ezg = 0; my $__ezh = ""; my $__ezi = ""; my $__ezj = 0; my $__ezk = 0; my $__ezl = "hid_" . $__ezr . "_num_cols"; if (exists $authlib9_14_2::_akn{$__ezl}) { $__ezg = $authlib9_14_2::_akn{$__ezl}; } for ($__ezk = 1; $__ezk <= $__ezg; $__ezk++) { $__ezh = $__ezr . "_" . $__ezk; if (exists $authlib9_14_2::_akn{$__ezh}) { $__ezi = $authlib9_14_2::_akn{$__ezh}; if ($__ezi eq "") { $__ezj = 1; last; } elsif ($__ezi !~ m/^[0-1]$/o) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__ezh . "'. Expected 0 or 1, found $__ezi.", ""); } } else { $__ezj = 1; last; } } if ($__ezj) { my $__ezm = ""; if (exists $__ezq->{'_ek'}) { $__ezm = $__ezq->{'_ek'}; } ciwlib9_14_2::_rp($__ezr,$__ezm,'_ia',$__ezs,0,0,0,$__ezq); } else { my $__ezn = $__ezr . "_shown"; my $__ezo = $authlib9_14_2::_akn{$__ezn}; if ($__ezo eq "") { authlib9_14_2::_zq(306, "Invalid input", "Invalid input entered for field '$__ezn'. Expected comma separated numbers but found nothing.", ""); } else { my $__ezp = '^\d+(?:,\d+)'; if ($__ezg == 1) { $__ezp .= '*$'; } else { $__ezp .= "{" . ($__ezg - 1). '}$'; } if ($__ezo !~ m/$__ezp/) { authlib9_14_2::_zq(306, "Invalid input", "Invalid input entered for field '$__ezn'. Expected comma separated numbers but found $__ezo.", ""); } } } } sub _arb { my ($__ezz, $__faa, $__fab) = @_; my $__ezt = 0; if (!exists $authlib9_14_2::_akn{$__faa}) { my $__ezu = ""; if (exists $__ezz->{'_ek'}) { $__ezu = $__ezz->{'_ek'}; } ciwlib9_14_2::_rp($__faa,$__ezu,'_ia',$__fab,0,0,0,$__ezz); } else { my $__ezv = $authlib9_14_2::_akn{$__faa}; if ($__ezv eq "" || $__ezv !~ m/^\d+$/) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__faa . "'.", ""); } my $__ezw = $__faa . "_shown"; my $__ezx = $authlib9_14_2::_akn{$__ezw}; if ($__ezx eq "") { authlib9_14_2::_zq(307, "Invalid input", "Invalid input entered for question '" . $__faa . "'. Expected an integer, found nothing.", ""); } else { if ($__ezx !~ m/^\[[\[\]\d,.]+\]$/o) { authlib9_14_2::_zq(306, "ACBC Error. Error reading ACBC rules shown list.", $@); } my $__ezy = eval($__ezx); if ($@) { authlib9_14_2::_zq(306, "ACBC Error. Error reading ACBC rules shown list.", $@); } if ($__ezv < 0 || $__ezv > @{$__ezy}) { authlib9_14_2::_zq(307, "Invalid input", "Invalid input entered for question '" . $__faa . "'. Expected number between 0 and " . (scalar @{$__ezy}) . ", found $__ezv.", ""); } } } } sub _arc { my ($__fai, $__faj, $__fak) = @_; my $__fac = 0; if (!exists $authlib9_14_2::_akn{$__faj}) { my $__fad = ""; if (exists $__fai->{'_ek'}) { $__fad = $__fai->{'_ek'}; } ciwlib9_14_2::_rp($__faj,$__fad,'_ia',$__fak,0,0,0,$__fai); } else { my $__fae = $authlib9_14_2::_akn{$__faj}; if ($__fae eq "" || $__fae !~ m/^\d+$/) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__faj . "'.", ""); } my $__faf = $__faj . "_shown"; my $__fag = $authlib9_14_2::_akn{$__faf}; if ($__fag eq "") { authlib9_14_2::_zq(307, "Invalid input", "Invalid input entered for question '" . $__faj . "'. Expected an integer, found nothing.", ""); } else { if ($__fag !~ m/^\[[\[\]\d,.]+\]$/o) { authlib9_14_2::_zq(306, "ACBC Error. Error reading ACBC rules shown list.", $@); } my $__fah = eval($__fag); if ($@) { authlib9_14_2::_zq(306, "ACBC Error. Error reading ACBC rules shown list.", $@); } if ($__fae < 0 || $__fae > @{$__fah}) { authlib9_14_2::_zq(307, "Invalid input", "Invalid input entered for question '" . $__faj . "'. Expected between 0 and " . (scalar @{$__fah}) . ", found $__fae.", ""); } } } } sub _ard { my ($__far, $__fas, $__fat) = @_; my $__fal = 0; if (!exists $authlib9_14_2::_akn{$__fas}) { my $__fam = ""; if (exists $__far->{'_ek'}) { $__fam = $__far->{'_ek'}; } ciwlib9_14_2::_rp($__fas,$__fam,'_ia',$__fat,0,0,0,$__far); } else { my $__fan = $authlib9_14_2::_akn{$__fas}; if ($__fan eq "" || $__fan !~ m/^\d+$/) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__fas . "'.", ""); } my $__fao = $__fas . "_shown"; my $__fap = $authlib9_14_2::_akn{$__fao}; if ($__fap eq "") { authlib9_14_2::_zq(306, "Invalid input", "Invalid input entered for field '$__fao'. Expected comma separated numbers but found nothing.", ""); } else { if ($__fap !~ m/^\d+(?:,\d+)+$/o) { authlib9_14_2::_zq(306, "Invalid input", "Invalid input entered for field '$__fao'. Expected comma separated numbers but found $__fap.", ""); } my @__faq = split(/,/, $__fap); if ($__fan < 1 || $__fan > @__faq) { authlib9_14_2::_zq(307, "Invalid input", "Invalid input entered for question '$__fas'. Expected between 1 and " . (scalar @__faq) . ", found $__fan.", ""); } } } } sub _are { my ($__fba, $__fbb, $__fbc) = @_; my $__fau = 0; if (!exists $authlib9_14_2::_akn{$__fbb}) { my $__fav = ""; if (exists $__fba->{'_ek'}) { $__fav = $__fba->{'_ek'}; } ciwlib9_14_2::_rp($__fbb,$__fav,'_ia',$__fbc,0,0,0,$__fba); } else { my $__faw = $authlib9_14_2::_akn{$__fbb}; if ($__faw eq "" || $__faw !~ m/^\d+$/) { authlib9_14_2::_zq(305, "Invalid input", "Invalid input entered for question '" . $__fbb . "'.", ""); } my $__fax = $__fba->{'_my'}; my $__fay = $__fax->{'_jc'}; my $__faz = @{$__fay}; if ($__faw < 1 || $__faw > $__faz) { authlib9_14_2::_zq(307, "Invalid input", "Invalid input entered for question '" . $__fbb . "'. Expected between 1 and " . $__faz . ", found $__faw.", ""); } } } sub _arf { my ($__fbd) = @_; if ($__fbd =~ m/^-?\d+$/){ return(0); } return(1); } sub _arg { my ($__fbg, $__fbh) = @_; my $__fbe = 0; foreach my $__fbf (@{$__fbh}) { if ($__fbf->{'_pt'} == $__fbg) { $__fbe = 1; last; } } return $__fbe; } return 1;
